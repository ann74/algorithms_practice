"""
На заводе по производству химических соединений есть реактор, в результате работы которого получаются химические
вещества, формула которых записывается в виде строки состоящей из заглавных и строчных латинских букв.
Также у завода есть список желательных веществ (веществ первого сорта), которые хотелось бы получить.
Кроме того заводу также интересны вещества второго и третьего сорта.
Вещество называется веществом первого сорта, если его формула в точности совпадает с формулой из списка желательных
веществ.
Вещество называется веществом второго сорта, если из него можно получить вещество из списка желательных в разультате
замены некоторых заглавных букв на строчные и наоборот.
Вещество называется веществом третьего сорта, если в нем возможны как замены букв с заглавных на строчные и наоборот,
так и замены любых гласных букв (aeiou) на другие гласные буквы, таким образом чтобы получилось вещество из списка
желательных.
В связи со сложной экономической ситуацией было принято решение не выбрасывать вещества второго и третьего сорта и для
каждого из них найти похожее вещество из списка желательных, причем, если преобразованиями из вещества второго или
третьего сорта можно получить несколько веществ из списка желательных, то его следует преобразовывать к тому веществу,
которое находится раньше в списке желательных.
"""


def unvovel(s):
    """
    Функция принимает на вход слово и заменяет все гласные буквы в нем на #
    """
    s = s.lower()
    for volve in 'aeoiu':
        s = s.replace(volve, '#')
    return s


n = int(input())
well_elements = input().split()
k = int(input())
elements = input().split()

first_sort = set()
second_sort = {}
third_sort = {}

for el in well_elements:
    first_sort.add(el)
    low_el = el.lower()
    if low_el not in second_sort:
        second_sort[low_el] = el
    unv_el = unvovel(el)
    if unv_el not in third_sort:
        third_sort[unv_el] = el
ans = []
for el in elements:
    if el in first_sort:
        ans.append(el)
    elif el.lower() in second_sort:
        ans.append(second_sort[el.lower()])
    elif unvovel(el) in third_sort:
        ans.append(third_sort[unvovel(el)])
    else:
        ans.append('')

print(*ans)
