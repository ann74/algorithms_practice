# Имеется стол длины L. На столе разложено N носков так, что никакой носок не вылезает за границы стола.
# Далее имеется умный мальчик Васька, который хочет замерить толщину покрытия стола носками в M точках.

# Решение 1. Добавляем все события в список кортежей, начало носка с -1, конец носка с 1, контрольную точку с 0.
# -1, 1 и 0 из-за того, какое событие считаем раньше при совпадении координат, т.е. сначала носок добавился,
# потом контрольная точка, потом убавился. Список сортируем и считаем текущее количество по всем координатам.
# Там, где контрльная точка добавляем значение в словарь. Потом выводим с помощью словаря
# L, n, m = (int(x) for x in input().split())
# socks = []
# for i in range(n):
#     x = input().split()
#     socks += [(int(x[0]), -1), (int(x[1]), 1)]
# points = [int(input()) for _ in range(m)]
# for point in points:
#     socks.append((point, 0))
# socks.sort()
# count = 0
# for sock in socks:
#     count -= sock[1]
#     if sock[1] == 0:
#         print(count)



# Еще одно решение с помощью сортировки подсчетом и перфиксных сумм, а потом просто берем значение контрольной точки
# При этом добавляем носок в начале, а убираем в следующей точке после конца
# Это решение быстрее, если L не очень большое, а n и m гораздо больше
L, n, m = (int(x) for x in input().split())
socks = [0] * (L + 2)
for i in range(n):
    start, end = (int(x) for x in input().split())
    socks[start] += 1
    socks[end + 1] -= 1

res = [0] * (L + 2)
for i in range(L + 1):
    res[i] = res[i - 1] + socks[i]
for i in range(m):
    print(res[int(input())])

