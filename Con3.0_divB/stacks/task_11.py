# Стек с защитой от ошибок
# Научитесь пользоваться стандартной структурой данных stack для целых чисел. Напишите программу,
# содержащую описание стека и моделирующую работу стека, реализовав все указанные здесь методы.
# Программа считывает последовательность команд и в зависимости от команды выполняет ту или иную
# операцию. После выполнения каждой команды программа должна вывести одну строчку. Возможные команды
# для программы:
# push n
# Добавить в стек число n (значение n задается после команды). Программа должна вывести ok.
# pop
# Удалить из стека последний элемент. Программа должна вывести его значение.
# back
# Программа должна вывести значение последнего элемента, не удаляя его из стека.
# size
# Программа должна вывести количество элементов в стеке.
# clear
# Программа должна очистить стек и вывести ok.
# exit
# Программа должна вывести bye и завершить работу.
# Перед исполнением операций back и pop программа должна проверять, содержится ли в стеке хотя бы один
# элемент. Если во входных данных встречается операция back или pop, и при этом стек пуст, то программа
# должна вместо числового значения вывести строку error.
# Формат ввода
# Вводятся команды управления стеком, по одной на строке
# Пример 1
# Ввод	 Вывод
# push 1   ok
# back     1
# exit     bye
# Пример 2
# Ввод	 Вывод
# size     0
# push 1   ok
# size     1
# push 2   ok
# size     2
# push 3   ok
# size     3
# exit     bye
# Пример 3
# Ввод	  Вывод
# push 3    ok
# push 14   ok
# size      2
# clear     ok
# push 1    ok
# back      1
# push 2    ok
# back      2
# pop       2
# size      1
# pop       1
# size      0
# exit      bye


s = input()
stack = []
while s != 'exit':
    s = s.split()
    comand = s[0]
    if len(s) > 1:
        value = int(s[1])
    if comand == 'push':
        stack.append(value)
        print('ok')
    elif comand == 'pop':
        if len(stack) > 0:
            print(stack.pop())
        else:
            print('error')
    elif comand == 'back':
        if len(stack) > 0:
            print(stack[-1])
        else:
            print('error')
    elif comand == 'size':
        print(len(stack))
    elif comand == 'clear':
        stack.clear()
        print('ok')
    s = input()
print('bye')
