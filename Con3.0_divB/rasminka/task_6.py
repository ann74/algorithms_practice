# Операционные системы lite
# Васин жесткий диск состоит из M секторов. Вася последовательно устанавливал на него различные операционные
# системы следующим методом: он создавал новый раздел диска из последовательных секторов, начиная с сектора
# номер ai и до сектора bi включительно, и устанавливал на него очередную систему. При этом, если очередной
# раздел хотя бы по одному сектору пересекается с каким-то ранее созданным разделом, то ранее созданный
# раздел «затирается», и операционная система, которая на него была установлена, больше не может быть загружена.
# Напишите программу, которая по информации о том, какие разделы на диске создавал Вася, определит, сколько
# в итоге работоспособных операционных систем установлено и работает в настоящий момент на Васином компьютере.
# Формат ввода
# Сначала вводятся натуральное число M — количество секторов на жестком диске (1 ≤ M ≤ 109) и целое число
# N — количество разделов, которое последовательно создавал Вася (0 ≤ N ≤ 1000).
# Далее идут N пар чисел ai и bi, задающих номера начального и конечного секторов раздела (1 ≤ ai ≤ bi ≤ M).
# Формат вывода
# Выведите одно число — количество работающих операционных систем на Васином компьютере.


m = int(input())
n = int(input())

segms = []
for i in range(n):
    a, b = map(int, input().split())
    segms.append([a, -1, i])
    segms.append([b, 1, i])
segms.sort()
count = 0
started = {}
for segm in segms:
    if segm[1] == -1:
        flag = False
        temp = list(started.keys())
        for st in temp:
            if segm[2] > st:
                count -= started[st]
                started[st] = 0
            else:
                flag = True
        if not flag:
            count += 1
            started[segm[2]] = 1
        else:
            started[segm[2]] = 0
    elif segm[1] == 1:
        started.pop(segm[2])

print(count)
