# Даны две последовательности, требуется найти и вывести их наибольшую общую подпоследовательность.
# Формат ввода
# В первой строке входных данных содержится число N – длина первой последовательности (1 ≤ N ≤ 1000). Во второй
# строке заданы члены первой последовательности (через пробел) – целые числа, не превосходящие 10000 по модулю.
# В третьей строке записано число M – длина второй последовательности (1 ≤ M ≤ 1000). В четвертой строке
# задаются члены второй последовательности (через пробел) – целые числа, не превосходящие 10000 по модулю.
# Формат вывода
# Требуется вывести наибольшую общую подпоследовательность данных последовательностей, через пробел.
# Пример 1
# Ввод	Вывод
# 3       2 3
# 1 2 3
# 3
# 2 3 1
# Пример 2
# Ввод	Вывод
# 3       1
# 1 2 3
# 3
# 3 2 1


n = int(input())
a = [int(x) for x in input().split()]
m = int(input())
b = [int(x) for x in input().split()]
dp = [[0] * (m + 1) for _ in range(n + 1)]
for i in range(1, n + 1):
    for j in range(1, m + 1):
        if a[i - 1] == b[j - 1]:
            dp[i][j] = dp[i - 1][j - 1] + 1
        else:
            dp[i][j] = max(dp[i][j - 1], dp[i - 1][j])
i = n
j = m
res = []
while i > 0 or j > 0:
    if i > 0 and dp[i][j] == dp[i - 1][j]:
        i -= 1
    elif dp[i][j] == dp[i][j - 1]:
        j -= 1
    else:
        res.append(a[i - 1])
        i -= 1
        j -= 1
print(*res[::-1])
