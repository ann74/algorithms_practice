# Около Петиного университета недавно открылось новое кафе, в котором действует следующая система скидок:
# при каждой покупке более чем на 100 рублей покупатель получает купон, дающий право на один бесплатный обед
# (при покупке на сумму 100 рублей и меньше такой купон покупатель не получает).
# Однажды Пете на глаза попался прейскурант на ближайшие N дней. Внимательно его изучив, он решил, что будет
# обедать в этом кафе все N дней, причем каждый день он будет покупать в кафе ровно один обед. Однако стипендия
# у Пети небольшая, и поэтому он хочет по максимуму использовать предоставляемую систему скидок так, чтобы его
# суммарные затраты были минимальны. Требуется найти минимально возможную суммарную стоимость обедов и номера
# дней, в которые Пете следует воспользоваться купонами.
# Формат ввода
# В первой строке входного файла записано целое число N (0 ≤ N ≤ 100). В каждой из последующих N строк записано
# одно целое число, обозначающее стоимость обеда в рублях на соответствующий день. Стоимость — неотрицательное
# целое число, не превосходящее 300.
# Формат вывода
# В первой строке выдайте минимальную возможную суммарную стоимость обедов. Во второй строке выдайте два числа
# K1 и K2 — количество купонов, которые останутся неиспользованными у Пети после этих N дней и количество
# использованных им купонов соответственно.
# В последующих K2 строках выдайте в возрастающем порядке номера дней, когда Пете следует воспользоваться
# купонами. Если существует несколько решений с минимальной суммарной стоимостью, то выдайте то из них, в
# котором значение K1 максимально (на случай, если Петя когда-нибудь ещё решит заглянуть в это кафе). Если
# таких решений несколько, выведите любое из них.
# Пример
# Ввод	Вывод
# 5       235
# 35      0 1
# 40      5
# 101
# 59
# 63


n = int(input())
price = [int(input()) for _ in range(n)]
table = [[0] * (n + 2) for _ in range(n + 1)]
for j in range(1, n + 2):
    table[0][j] = 3000000
for i in range(1, n + 1):
    for j in range(0, n + 2):
        if j > i:
            table[i][j] = 3000000
        elif price[i - 1] > 100:
            table[i][j] = min((table[i - 1][j - 1] + price[i - 1]), table[i - 1][j + 1])
        else:
            table[i][j] = min((table[i - 1][j] + price[i - 1]), table[i - 1][j + 1])
ans = table[-1][0]
k1 = 0
for j in range(1, n + 1):
    if table[-1][j] <= ans:
        ans = table[-1][j]
        k1 = j
i, j = n, k1
k2 = 0
res = []
while i > 0:
    if price[i - 1] > 100:
        if table[i - 1][j - 1] + price[i - 1] > table[i - 1][j + 1]:
            k2 += 1
            res.append(i)
            j += 1
        else:
            j -= 1
    else:
        if table[i - 1][j] + price[i - 1] > table[i - 1][j + 1]:
            k2 += 1
            res.append(i)
            j += 1
    i -= 1
print(ans)
print(k1, k2)
print(*res[::-1])
