# Требуется вычислить площадь комнаты в квадратном лабиринте.
# Формат ввода
# В первой строке вводится число N – размер лабиринта (3 ≤ N ≤ 10). В следующих N строках задан лабиринт
# (‘.’ – пустая клетка, ‘*’ – стенка). И наконец, последняя строка содержит два числа – номер строки и столбца клетки,
# находящейся в комнате, площадь которой необходимо вычислить. Гарантируется, что эта клетка пустая и что лабиринт
# окружен стенками со всех сторон.
# Формат вывода
# Требуется вывести единственное число – количество пустых клеток в данной комнате.
# Пример
# Ввод	Вывод
# 3       1
# ***
# *.*
# ***
# 2 2


import sys

sys.setrecursionlimit(1000000)

def dfs(graph, x, y):
    global square
    square += 1
    table[x][y] = 1
    dx = [0, -1, 0, 1]
    dy = [-1, 0, 1, 0]
    for di, dj in zip(dx, dy):
        if not graph[x + di][y + dj]:
            dfs(graph, x + di, y + dj)


n = int(input())
table = [[-1] * n for _ in range(n)]
for i in range(n):
    row = list(input())
    for j in range(n):
        if row[j] == '.':
            table[i][j] = 0
x, y = map(int, input().split())

square = 0
dfs(table, x - 1, y - 1)
print(square)
